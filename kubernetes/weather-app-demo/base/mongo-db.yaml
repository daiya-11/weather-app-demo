apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo
spec:
  serviceName: mongo-service
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
      - name: mongo
        image: mongo:latest # MongoDB container image
        ports:
        - containerPort: 27017
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              name: mongo-credentials # Reference to the secret for MongoDB root username
              key: MONGO_INITDB_ROOT_USERNAME
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongo-credentials # Reference to the secret for MongoDB root password
              key: MONGO_INITDB_ROOT_PASSWORD
        - name: MONGO_INITDB_DATABASE
          value: "weather-db-staging" # Initial database name
        volumeMounts: # Mount volumes
        - name: mongo-data
          mountPath: /data/db  # MongoDB data directory
        - name: mongo-init
          mountPath: /docker-entrypoint-initdb.d # Initialization scripts
        livenessProbe: # Liveness probe to check if the pod is alive
          exec:
            command:
            - mongosh
            - --eval
            - "db.adminCommand('ping')" 
          initialDelaySeconds: 30  
          periodSeconds: 10 
          timeoutSeconds: 5 
          failureThreshold: 5 
        readinessProbe:  # Readiness probe to check if the pod is ready to serve traffic
          exec:
            command:
            - mongosh
            - --eval
            - "db.adminCommand('ping')"
          initialDelaySeconds: 5
          periodSeconds: 10
      volumes: # Volumes for initialization scripts
      - name: mongo-init
        configMap:
          name: mongo-init-config # Reference to the ConfigMap containing init scripts
  volumeClaimTemplates: # Persistent volume claim for MongoDB data
  - metadata:
      name: mongo-data # PVC name
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi # Storage size
